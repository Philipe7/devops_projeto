---
- name: Configuração do servidor
  hosts: all
  become: yes
  vars:
    ssh_user: philipe
    ssh_group: acesso_ssh
    volume_group: dados
    logical_volume: sistema
    mount_point: /dados
    nfs_export_dir: /dados/nfs
    nfs_allowed_subnet: 192.168.57.0/24
  tasks:

    # Atualização do sistema
    - name: Atualizar todos os pacotes
      apt:
        update_cache: yes
        upgrade: dist
      register: apt_update
      retries: 3
      delay: 10
      until: apt_update is success

    # Instalação de pacotes necessários
    - name: Instalar pacotes essenciais
      apt:
        name:
          - nfs-kernel-server
          - auditd
          - lvm2
          - openssh-server
        state: present
      register: package_install
      retries: 3
      delay: 10
      until: package_install is success

    # Verificação de discos disponíveis
    - name: Verificar se os discos existem
      stat:
        path: "{{ item }}"
      loop:
        - /dev/sdb
        - /dev/sdc
        - /dev/sdd
      register: disks

    - name: Exibir discos detectados
      debug:
        msg: "Discos disponíveis: {{ disks.results | selectattr('stat.exists', 'equalto', true) | map(attribute='item') | list }}"

    - name: Criar o Volume Group "{{ volume_group }}"
      lvg:
        name: "{{ volume_group }}"
        devices: "{{ disks.results | selectattr('stat.exists', 'equalto', true) | map(attribute='item') | list }}"
      when: disks.results | selectattr('stat.exists', 'equalto', true) | list | length > 0

    - name: Criar o Logical Volume "{{ logical_volume }}"
      lvol:
        vg: "{{ volume_group }}"
        lv: "{{ logical_volume }}"
        size: 15G
        state: present
      when: disks.results | selectattr('stat.exists', 'equalto', true) | list | length > 0

    - name: Formatar o Logical Volume
      filesystem:
        fstype: ext4
        dev: "/dev/{{ volume_group }}/{{ logical_volume }}"
      when: disks.results | selectattr('stat.exists', 'equalto', true) | list | length > 0

    - name: Montar o Logical Volume em {{ mount_point }}
      mount:
        path: "{{ mount_point }}"
        src: "/dev/{{ volume_group }}/{{ logical_volume }}"
        fstype: ext4
        state: mounted
        opts: defaults
      when: disks.results | selectattr('stat.exists', 'equalto', true) | list | length > 0

